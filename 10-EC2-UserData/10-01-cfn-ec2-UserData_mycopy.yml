AWSTemplateFormatVersion: 2010-09-09

Parameters:
  EnvironmentName:
    Description: Select the environment 
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prod
    ConstraintDescription: must be development or production      
  InstanceType: 
    Description: Select the ec2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - t2.small
      - t2.medium
  KeyName:
    Description: Key name to SSH to VM's. 
    Type: AWS::EC2::KeyPair::KeyName
  AvailabilityZone:
    Description: select the availability zone
    Type: String
    Default: us-east-2a
    AllowedValues:
      - us-east-2a
      - us-east-2b
      - us-east-2c


Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName, prod]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "EC2 Instance Configuration"    
        Parameters:
          - InstanceType
          - KeyName
          - AvailabilityZone  
      - Label:
          default: "Environment Configuration"          
        Parameters:
          - EnvironmentName  
    ParameterLabels:
      EnvironmentName:
        default: "Which environment we are planning to create this instance?"
      KeyName:
        default: "Be aware that once keyname is selected we cannot change it unless instance replaced"

Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My SG with port 22, 8080 and 80 inbound
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'          
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
 
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0fa49cc9dc8d62c84
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      AvailabilityZone: !Ref AvailabilityZone
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData:
        Fn::Base64: |
            #!/bin/bash
            yum update -y
            amazon-linux-extras install epel -y
            yum -y erase java-1.7.0-openjdk.x86_64
            amazon-linux-extras install java-openjdk11 -y
            wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.62/bin/apache-tomcat-9.0.62.tar.gz
            tar xvf apache-tomcat-9.0.62.tar.gz 
            useradd -r tomcat 2>/dev/null
            mv apache-tomcat-9.0.62 tomcat9
            mv tomcat9/ /usr/local/
            chown -R tomcat:tomcat /usr/local/tomcat9
            chmod +x /usr/local/tomcat9/bin/*
            tee /etc/systemd/system/tomcat.service<<EOF
            [Unit]
            Description=Tomcat Server
            After=syslog.target network.target

            [Service]
            Type=forking
            User=tomcat
            Group=tomcat

            Environment=CATALINA_HOME=/usr/local/tomcat9
            Environment=CATALINA_BASE=/usr/local/tomcat9
            Environment=CATALINA_PID=/usr/local/tomcat9/temp/tomcat.pid

            ExecStart=/usr/local/tomcat9/bin/catalina.sh start
            ExecStop=/usr/local/tomcat9/bin/catalina.sh stop

            RestartSec=12
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOF
            systemctl daemon-reload 
            systemctl start tomcat
            mkdir -p /usr/local/tomcat9/webapps/ROOT
            echo "Cloud Formation Tomcat9" >/usr/local/tomcat9/webapps/ROOT/index.html            
    
  MyProdEIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties: 
      InstanceId: !Ref MyVMInstance
          

Outputs:
  AppURL:
    Description: Tomcat App Access URL
    Value: !Sub 'http://${MyVMInstance.PublicDnsName}:8080/index.html'

