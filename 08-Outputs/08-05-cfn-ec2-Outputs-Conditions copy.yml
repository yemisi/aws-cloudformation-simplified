AWSTemplateFormatVersion: 2010-09-09
Description: Outputs practice

Parameters:
  MyKeyName:
    Description: Select the Key Name
    Type: AWS::EC2::KeyPair::KeyName
  MyEnvironmentName:
    Description: Select the environment 
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prod
    ConstraintDescription: must be development or production      

Mappings:     
  MyRegionMap:
    us-east-2:
      HVM64: ami-0fa49cc9dc8d62c84
    us-east-1:
      HVM64: ami-0022f774911c1d690
  MyEnvironmentMap:
    dev:
      instanceType: t2.micro
    prod:
      instanceType: t2.small   

Conditions:
  CreateDevSecurityGroup: !Equals [!Ref MyEnvironmentName, dev]

Resources:
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - MyRegionMap
        - !Ref 'AWS::Region'
        - HVM64
      InstanceType: !FindInMap
        - MyEnvironmentMap
        - !Ref MyEnvironmentName
        - instanceType
      KeyName: !Ref MyKeyName
      SecurityGroups: !If [CreateDevSecurityGroup, [!Ref MyDevGlobalSecurityGroup], !Ref 'AWS::NoValue' ]

  MyDevGlobalSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDevSecurityGroup
    Properties:
      GroupDescription: My Dev environment Global Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 97.108.231.162/32

Outputs:
  MyInstanceId:
    Description: My Instance ID
    Value: !Ref MyVMInstance
  MyDNSName:
    Description: My Public DNS Name
    Value: !GetAtt MyVMInstance.PublicDnsName
  MyInstanceAvailabilityZone:
    Description: Instance AZ
    Value: !GetAtt MyVMInstance.AvailabilityZone
    Export:
      Name: !Sub "${AWS::StackName}-InstanceAz"
  MyDevGlobalSecurityGroup:
    Description: My Dev SG
    Value: !Ref MyDevGlobalSecurityGroup
    Condition: CreateDevSecurityGroup
    Export: 
      Name: MyDevSSHGlobalSG