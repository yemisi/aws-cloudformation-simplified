AWSTemplateFormatVersion: 2010-09-09
Description: Conditions Practice

Parameters:
  MyKeyName:
    Description: Select Key name
    Type: AWS::EC2::KeyPair::KeyName
  EnvironmentName:
    Description: Select the environment 
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prod
      - qa
    ConstraintDescription: must be development or production or qa     

Mappings:     
  MyRegionMap:
    us-east-2:
      HVM64: ami-0fa49cc9dc8d62c84
    us-west-1:
      HVM64: ami-0022f774911c1d690

  MyEnvironmentMap:
    dev:
      instanceType: t2.micro
    prod:
      instanceType: t2.small  
    qa:
      instanceType: t2.medium                

Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName, prod]
  CreateProdSecurityGroup: !Equals [!Ref EnvironmentName, prod]
  CreateDevSecurityGroup: !Not [{Condition: CreateProdSecurityGroup}]


Resources:
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - MyRegionMap
        - !Ref 'AWS::Region'
        - HVM64
      InstanceType: !FindInMap
        - MyEnvironmentMap
        - !Ref EnvironmentName
        - instanceType
      KeyName: !Ref MyKeyName
      SecurityGroups: !If [CreateDevSecurityGroup, [!Ref DevEnvSecurityGroup], [!Ref ProdEnvSecurityGroup]]  

  MyProdEIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties:
      InstanceId: !Ref MyVMInstance

  DevEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDevSecurityGroup
    Properties:
      GroupDescription: DevSG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  ProdEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateProdSecurityGroup
    Properties:
      GroupDescription: ProdSG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0